// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-row($gutter: $grid-gutter-width) {
  --#{$variable-prefix}gutter-x: #{$gutter};
  --#{$variable-prefix}gutter-y: 0;
  margin-right: calc(var(--#{$variable-prefix}gutter-x) * -0.625); 
  margin-left: calc(var(--#{$variable-prefix}gutter-x) * -0.625); 
  @if $enable-mobile-gutters {
        @include media-breakpoint-down(lg) {
        margin-right: calc(var(--#{$variable-prefix}gutter-x) * -0.8333333333); 
        margin-left: calc(var(--#{$variable-prefix}gutter-x) * -0.8333333333); 
      }
    }
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  padding-right: calc(var(--#{$variable-prefix}gutter-x) * 0.625); 
  padding-left: calc(var(--#{$variable-prefix}gutter-x) * 0.625); 

     @if $enable-mobile-gutters {
      @include media-breakpoint-down(lg) {
        padding-right: calc(var(--#{$variable-prefix}gutter-x) * 0.8333333333); 
        padding-left: calc(var(--#{$variable-prefix}gutter-x) * 0.8333333333); 
      }
    }

}


@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {

      // Gutters
      //
      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
      @each $key, $value in $gutters {
        .g#{$infix}-#{$key},
        .gx#{$infix}-#{$key} {
          --#{$variable-prefix}gutter-x: #{$value};
        }

        .g#{$infix}-#{$key},
        .gy#{$infix}-#{$key} {
          --#{$variable-prefix}gutter-y: #{$value};
        }
      }
    }
  }
}